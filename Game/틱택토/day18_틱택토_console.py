

# 문법
    # 변수 : 데이터 저장하는 상자[공간]
    # 리스트 : 변수를 여러개를 기준에 따라서 저장하는 상자[공간]
        # 기준 : [인덱스번호] : 0번부터 시작
    # 1차원 리스트 : 리스트명 = [ 90 , 80 , 70 ]
                            # 리스트명 [ 데이터1 , 데이터2 , 데이터3 ~~ ]
    # 2차원 리스트 : 리스트명 = [ [90,80,70] , [60,50,40] ]
                            # 리스트명 [ [데이터1 , 데이터2 , 데이터3 ] , [ 데이터1 , 데이터2 , 데이터3 ] ]
                                        #  [   [ 가로 단위1 ] , [ 가로 단위2 ] , [ 가로단위3 ]  ~~  ]


# 틱택토 게임 console 버전
게임판 = [" "," "," "," "," "," "," "," "," "] # 9개 공백을 저장하는 1차원 리스트
                                            # 인덱스 [0] 부터 시작 인덱스[8] 까지
승리알 = ""
import random # 난수 생성 함수 제공

################### 1. 게임판 출력  ######################
print("-" * 11)  # 문자+숫자 : 문자가 숫마만큼 반복
for i in range(9):
    print(게임판[i], end=" | ")  # 엔터 위에 원화기호 특수문자 SHIFT  : |
    # 한줄에 3개씩 출력하기
    if i % 3 == 2:  # 3으로 나눴을때 나머지가 2 면 줄바꿈
        # 배수 구하기   :  값%수 == 0 값을 수로 나누기하여 나머지가 0 이면   값은 그 수의 배수
        print()  # print는 줄바꿈이 자동적으로 포함
        print("-" * 11)

while True : # 계속 반복하기
    ################### 2. 사용자에게 0 ~ 8 인덱스를 입력받아 입력받은 인덱스는 O 모양 바꾸기  ######################
    while True : # 모양이 바뀔때까지 반복
        플레이어 = int( input("[0~8 사이 위치 선택 : ") )
        if 게임판[플레이어] ==" " : # 플레이어가 선택한 위치가 공백이면
            게임판[플레이어] = "0" # 모양 바꾸기
            break # 반복문 탈출
        else: # 공백이 아니면
            print("[ 경고 ] : 이미 둔 자리 입니다 ")
            # while 다시 반복 [ 다시  입력받기 ]

    ################### 3. 컴퓨터는 0 ~ 8 인덱스를 난수생성하여 이미 둔 자리를 제외한 X 로 모양 바꾸기 ######################
    while True : # 모양이 바뀔때까지 반복
        컴퓨터 = random.randint( 0 , 8 )  # 0부터 8 사이의 난수 생성
            # random.randint( 시작 , 끝 )  : 시작 ~ 끝 사이의 난수 생성
        if 게임판[컴퓨터] == " " :
            게임판[컴퓨터] = "X"
            break

    ################### 1. 게임판 출력  ######################
    print("-" * 11)  # 문자+숫자 : 문자가 숫마만큼 반복
    for i in range(9):
        print(게임판[i], end=" | ")  # 엔터 위에 원화기호 특수문자 SHIFT  : |
        # 한줄에 3개씩 출력하기
        if i % 3 == 2:  # 3으로 나눴을때 나머지가 2 면 줄바꿈
            # 배수 구하기   :  값%수 == 0 값을 수로 나누기하여 나머지가 0 이면   값은 그 수의 배수
            print()  # print는 줄바꿈이 자동적으로 포함
            print("-" * 11)
    ##################  4. 이기는 수 ###############################################################
    ########## 4_1 가로 로 이기는수 ############# 0 1 2 , 3 4 5 , 6 7 8  모양이 모두 동일한경우
    if 게임판[0] == 게임판[1] and 게임판[1] == 게임판[2] :
        승리알 = 게임판[0]
    if 게임판[3] == 게임판[4] and 게임판[4] == 게임판[5] :
        승리알 = 게임판[3]
    if 게임판[6] == 게임판[7] and 게임판[7] == 게임판[8] :
        승리알 = 게임판[6]
    ########## 4_1 세로 로 이기는수 ############# 0 3 6 , 1 4 7 , 2 5 8  모양이 모두 동일한경우
    if 게임판[0] == 게임판[3] and 게임판[3] == 게임판[6] :
        승리알 = 게임판[0]
    if 게임판[1] == 게임판[4] and 게임판[4] == 게임판[7] :
        승리알 = 게임판[3]
    if 게임판[2] == 게임판[5] and 게임판[5] == 게임판[8] :
        승리알 = 게임판[2]
    ########## 4_1 대각선 로 이기는수 ########### 0 4 8 , 2 4 6 모양이 모두 동일한경우
    if 게임판[0] == 게임판[4] and 게임판[4] == 게임판[8] :
        승리알 = 게임판[0]
    if 게임판[2] == 게임판[4] and 게임판[4] == 게임판[6] :
        승리알 = 게임판[2]
    #################### 게임종료의 경우의 수 #########################
    if 승리알 == "0" :
        print(" 플레이어1 승리 ")
        break # while 탈출 => 게임 종료
    if 승리알 == "X" :
        print(" 컴퓨터 승리 ")
        break # while 탈출 => 게임 종료


