
# 문제 191 :
data = [
    [ 2000 , 3050 , 2050 , 1980 ] ,
    [ 7500 , 2050 , 2050 , 1980 ] ,
    [15450 , 15050 , 15550 , 14900]
]
for 행 in data :
    for 열 in 행 :
        print( 열 * 1.00014 )
# 1 : 100%   0.5 : 50%   0.05 : 5%     0.00014 : 0.014%

# 문제 192 :
for 행 in data :
    for 열 in 행 :
        print( 열 * 1.00014 )
    print("-"*5)    # 행마다 출력

# 문제 193 : 결과를 1차원 리스트에 저장
결과 = []
for 행 in data :
    for 열 in 행 :
        결과.append( 열 * 1.00014 ) # 하나씩 리스트에 저장
print( 결과 ) #리스트 확인

# 문제 194 : 결과를 2차원 리스트에 저장
결과 = [] # 2차원 리스트 사용될 예정
for 행 in data :
    sub = [ ] # 행 리스트
    for 열 in 행 :
        sub.append(열*1.00014)
    결과.append( sub )
print( 결과 )

# 문제 195 : 4번열 출력
ohlc = [ ["open" , "high" , "low" ,"close"] ,
         [100 , 110 , 70 , 100] ,
         [200 , 210 , 180 , 190 ] ,
         [300 , 310 , 300 , 310 ] ]

for 행 in ohlc[ 1 : ] : # 0번 행 제외
    print( 행[3] ) # 각 행마다 3번 인덱스 출력

# 문제 196 :
for 행 in ohlc[ 1 : ] : # 0번 행 제외
    if 행[3] > 150 : # 각 행마다 3번 인덱스 값이 150보다 크면
        print( 행[3] ) # 각 행마다 3번 인덱스 출력

# 문제 197 :
for 행 in ohlc[ 1 : ] : # 0번 행 제외
    if 행[3] >= 행[0] : # 3번 인덱스가 0번인덱스보다 이상이면
        print( 행[3] ) # 각 행마다 3번 인덱스 출력

# 문제 198 :
변동폭 = []
for 행 in ohlc[ 1 : ] : # 0번 행 제외
    변동폭.append( 행[1] - 행[2] )
                # 고가 - 저가
print(변동폭)

# 문제 199 :
for 행 in ohlc :
    if 행[3] > 행[0] : # 종가가 시작보다 크면
        print( 행[1] - 행[2] ) # 변동폭 계산

# 문제 200 :
총수익금 = 0
for 행 in ohlc[ 1 : ] : # 0번 행 제외
    총수익금 += ( 행[3] - 행[0] )  # 종가-시가 => 수익 => +총수익금
print( 총수익금 )







